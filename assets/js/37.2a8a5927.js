(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{520:function(a,t,e){"use strict";e.r(t);var r=e(13),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"gc-基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gc-基础知识"}},[a._v("#")]),a._v(" GC 基础知识")]),a._v(" "),e("h3",{attrs:{id:"_1、java-中为什么会有-gc-机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、java-中为什么会有-gc-机制"}},[a._v("#")]),a._v(" 1、Java 中为什么会有 GC 机制")]),a._v(" "),e("p",[a._v(" 安全性考虑；-- for security.")]),a._v(" "),e("p",[a._v(" 减少内存泄露；-- erase memory leak in some degree.")]),a._v(" "),e("p",[a._v(" 减少程序员工作量。-- Programmers don't worry about memory releasing.")]),a._v(" "),e("h3",{attrs:{id:"_2、对于-java-的-gc-哪些内存需要回收"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、对于-java-的-gc-哪些内存需要回收"}},[a._v("#")]),a._v(" 2、对于 Java 的 GC 哪些内存需要回收")]),a._v(" "),e("p",[a._v("GC 主要进行回收的内存是 JVM 中的方法区和堆")]),a._v(" "),e("h3",{attrs:{id:"_3、java-中的-gc-什么时候回收垃圾"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、java-中的-gc-什么时候回收垃圾"}},[a._v("#")]),a._v(" 3、Java 中的 GC 什么时候回收垃圾")]),a._v(" "),e("p",[a._v("可达性分析(Reachability Analysis)。")]),a._v(" "),e("p",[a._v('所有生成 的对象都是一个称为"GC Roots"的根的子树。')]),a._v(" "),e("p",[a._v("从 GC Roots 开始向下搜索，搜索所经过的路径称为引用链 (Reference Chain)，当一个对象到 GC Roots 没有任何引用链可以到达时，就称这个对象是不可达的（不可引用的）， 也就是可以被 GC 回收了。")])])}),[],!1,null,null,null);t.default=s.exports}}]);